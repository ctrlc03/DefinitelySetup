name: Setup ceremony

# this will only run on pushes to main/staing/dev
on:
  push:
    branches: [ main, staging, dev ]

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: 
      ${{ (github.ref == 'refs/heads/main' && 'p0tion-production') ||
      (github.ref == 'refs/heads/staging' && 'p0tion-staging') ||
      (github.ref == 'refs/heads/dev' && 'p0tion-development') }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    # install p0tion
    - name: Install p0tion globally
      run: npm install -g @p0tion/phase2cli

    # write env to file
    - name: Write env locally
      run: |
        echo "${{ secrets.PHASE2CLI_ENV_FILE }}" > ./.env

    # List ceremonies that have already been created
    - name: List existing ceremonies
      id: list_ceremonies
      run: |
        echo "$(phase2cli list)" > existing_ceremonies.txt
        cat existing_ceremonies.txt

    # List all the ceremonies in ./ceremonies
    - name: List all ceremonies
      id: list_all_ceremonies
      run: |
        echo "$(ls -d ceremonies/* | cut -d'/' -f2)" > dir_output.txt
        cat dir_output.txt

    # want to setup only ceremonies that have not been setup already
    - name: Run p0tion and setup ceremony
      run: |
        IFS=',' read -ra EXISTING_CEREMONIES <<< $(cat existing_ceremonies.txt)
        ALL_CEREMONIES=()
        while IFS= read -r line; do
            ALL_CEREMONIES+=("$line")
        done < dir_output.txt

        for ceremony in "${ALL_CEREMONIES[@]}"; do
            if [[ ! " ${EXISTING_CEREMONIES[@]} " =~ " ${ceremony} " ]]; then
                phase2cli coordinate setup --template "./ceremonies/$ceremony/p0tionConfig.json" --auth "${{ secrets.ACCESS_TOKEN }}"
            fi
        done